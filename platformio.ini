; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:base]
framework = arduino
extra_scripts = pre:cpp_only_flags.py, pre:gen_ring_bitmaps.py
build_unflags = -Os
build_flags = 
    -std=gnu++20
    -std=c++20
    -mfloat-abi=hard
    -mfpu=fpv5-sp-d16
    -Wdouble-promotion
lib_deps =
    thijse/ArduinoLog
    jandelgado/JLed
    https://github.com/pschatzmann/arduino-audio-tools
    dxinteractive/ResponsiveAnalogRead
    adafruit/Adafruit ADS1X15
    adafruit/Adafruit MCP4728
    adafruit/Adafruit MCP23017 Arduino Library
    olikraus/U8g2 @ ^2

[env:rp2350-base]
extends = env:base
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board_build.core = earlephilhower
; Use the Debug Probe over SWD:
upload_protocol = cmsis-dap
debug_tool = cmsis-dap
;upload_protocol = picotool

[env:rpipico2]
extends = env:rp2350-base
board = rpipico2
build_flags = 
    -mcpu=cortex-m33
;upload_protocol = picotool

[env:rpipico2-release]
extends = env:rpipico2
build_type = release
build_unflags = -Os
build_flags =
    -Ofast
    -ffast-math 
    -fno-math-errno 
    -fno-trapping-math
    -DNDEBUG          ; strip asserts, etc.

[env:rpipico2-debug]
extends = env:rpipico2
build_type = debug  ; adds -g and debug-friendly opts
build_flags = -O0 
    -g3 
    -DDEBUG 
    -DPROFILE ; if we need to debug profiler


[env:rpipico2-profile]
extends = env:rpipico2
build_type = release

build_flags = -Ofast
    -ffast-math 
    -fno-math-errno 
    -fno-trapping-math
    -DNDEBUG          
    -DPROFILE

[env:native]
platform = native
test_build_src = no
build_flags = -std=c++20 
    -DDEBUG 
    -DPROFILE 
    -g3 
    -O0






